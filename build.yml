---
apiVersion: v1
kind: ImageStream
metadata:
  name: littb-frontend-artifact-image
---
apiVersion: v1
kind: ImageStream
metadata:
  name: littb-frontend
---
apiVersion: v1
kind: ImageStream
metadata:
  name: nginx-custom
---
apiVersion: v1
kind: BuildConfig
metadata:
  name: littb-frontend-artifact-build
spec:
  source:
    git:
      uri: https://github.com/spraakbanken/littb-frontend.git
      ref: master
  output:
    to:
      kind: ImageStreamTag
      name: littb-frontend-artifact-image:latest
  strategy:
    sourceStrategy:
      from:
        kind: ImageStreamTag
        name: nodejs:8
        namespace: openshift
      env:
      - name: NPM_RUN
        value: build
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config 
data:
  nginx.conf: |
    map $remote_addr $remote_addr_anon {
        ~(?P<ip>\d+\.\d+\.\d+)\.    $ip.0;
        ~(?P<ip>[^:]+:[^:]+):       $ip::;
        default                     0.0.0.0;
    }

    # log_format anonymized '$ip_anonymized - $remote_user [$time_local] '
    #    '"$request" $status $body_bytes_sent ' 
    #    '"$http_referer" "$http_user_agent"';
    
    log_format json_combined escape=json
      '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr_anon",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent"'
      '}';
      server {
          listen       8080;
          listen       [::]:8080;
          server_name  *.spraakbanken.gu.se *.nip.io;
          root         /opt/app-root/src/;
          index index.html;

          location / {
              try_files $uri $uri/ /index.html;
          }
          
          location ~ ^/(red|api|txt|bilder|css|sla-bibliografi|so) {
              proxy_pass http://demolittb.spraakdata.gu.se;
          }

          #error_page 404 /404.html;
          #   location = /40x.html {
          #}

          error_page 500 502 503 504  /50x.html;
             location = /50x.html {
          }
          
          

          # default log format
          # log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
          #                   '$status $body_bytes_sent "$http_referer" '
          #                   '"$http_user_agent" "$http_x_forwarded_for"';
          # access_log /var/opt/rh/rh-nginx112/log/nginx/access.log json_combined;
          access_log /var/opt/rh/rh-nginx112/log/nginx/access.log;

      }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeats-confmap 
data:
  filebeat.yml: |
    - module: nginx
      access:
        input:
          close_eof: true

---
# apiVersion: v1
# kind: BuildConfig
# metadata:
#   name: nginx-geoip
# spec:
#   source:
#     git:
#       uri: https://github.com/nginxinc/docker-nginx-unprivileged.git
#     contextDir: "mainline/stretch-perl"
#   output:
#     to:
#       kind: ImageStreamTag
#       name: nginx-geoip:latest
#   strategy:
#     dockerStrategy:
#       dockerfilePath: "."
#   triggers:
#   - type: ImageChange
  
# ---
---
apiVersion: v1
kind: BuildConfig
metadata:
  name: nginx-custom
spec:
  source:
    git:
      uri: https://github.com/spraakbanken/nginx-container.git
    contextDir: "1.12/"
  output:
    to:
      kind: ImageStreamTag
      name: nginx-custom:latest
  strategy:
    dockerStrategy:
      dockerfilePath: "."
  triggers:
  - type: ImageChange
  
---

apiVersion: v1
kind: BuildConfig
metadata:
  name: littb-frontend-image-build
spec:
  source:
    images:
    - from:
        kind: ImageStreamTag
        name: littb-frontend-artifact-image:latest
      paths:
      - sourcePath: /opt/app-root/src/dist/.
        destinationDir: "."
  output:
    to:
      kind: ImageStreamTag
      name: littb-frontend:latest
  strategy:
    sourceStrategy:
      from:
        kind: ImageStreamTag
        name: nginx-custom:latest
  triggers:
  - type: ImageChange







---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: littb-frontend
  name: littb-frontend
spec:
  replicas: 1
  selector:
    app: littb-frontend
    deploymentconfig: littb-frontend
  strategy:
    type: Rolling
  template:
    metadata:
      labels:
        app: littb-frontend
        deploymentconfig: littb-frontend
    spec:
      containers:
        - image: >-
            docker-registry.default.svc:5000/littb/littb-frontend:latest
          imagePullPolicy: Always
          name: littb-frontend
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/app-root/etc/nginx.d/
              name: conf
            - mountPath: /opt/app-root/filebeat/
              name: filebeats-conf
            - mountPath: /opt/app-root/shared/
              name: pvc
      volumes:
        - configMap:
            defaultMode: 420
            name: nginx-config
          name: conf
        - configMap:
            defaultMode: 420
            name: filebeats-confmap
          name: filebeats-conf
        - name: pvc
          persistentVolumeClaim:
            claimName: littb-storage
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - littb-frontend
        from:
          kind: ImageStreamTag
          name: 'littb-frontend:latest'
          namespace: littb
      type: ImageChange

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: littb-frontend
  name: littb-frontend
spec:
  # clusterIP: 172.30.76.15
  ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
  selector:
    app: littb-frontend
    deploymentconfig: littb-frontend
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: littb-frontend
  name: littb-frontend
spec:
  port:
    targetPort: 8080-tcp
  to:
    kind: Service
    name: littb-frontend
  wildcardPolicy: None
