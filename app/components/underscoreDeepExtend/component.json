{
  "name": "underscoreDeepExtend",
  "description": "A deepExtend implementation for underscore, lodash and friends.",
  "keywords": [
    "underscode",
    "lodash",
    "deep extend"
  ],
  "author": {
    "name": "Kurt Milam - http://xioup.com"
  },
  "license": "GPL v3",
  "version": "0.0.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/pygy/undescoreDeepExtend.git"
  },
  "main": "index",
  "gitHead": "8e24fed534517dd43d8f3cbc2f7cb1a6e800966d",
  "readme": "# _.deepExtend \n\nA deep extend implementation for [underscore](http://underscorejs.org/), [lodash](http://lodash.com/) and their (AFAIK non-existent) friends.\n\nBased conceptually on the [_.extend()](http://underscorejs.org/#extend) function in underscore.js.\n\nCopyright (C) 2012  Kurt Milam - http://xioup.com \n\nLicensed under the GPL V3+.\n\nOriginal source: https://gist.github.com/1868955\n\n## Installation:\n\n    npm install git://github.com/pygy/undescoreDeepExtend.git\n    \nor, in the package.json dependencies:\n\n    \"underscoreDeepExtend\": \"git://github.com/pygy/undescoreDeepExtend.git\"\n\n## Dependency: \n\nOne of \n\n- [underscore.js](http://underscorejs.org/)\n- [lodash.js](http://lodash.com/)\n- another clone that provides _.each and _.is(Array|Object|String|Undefined).\n\n## Usage:\n\nMix it in with the parent library (it must be explicitly injected):\n\n    _.mixin({deepExtend: underscoreDeepExtend(_)});\n    \nCall it like this:\n\n    var myObj = _.deepExtend(grandparent, child, grandchild, greatgrandchild)\n\n## Notes:\n\n### Keep it DRY.\n\nThis function is especially useful if you're working with JSON config documents. It allows you to create a default\nconfig document with the most common settings, then override those settings for specific cases. It accepts any\nnumber of objects as arguments, giving you fine-grained control over your config document hierarchy.\n\n### Special Features and Considerations:\n\n- parentRE allows you to concatenate strings. example:\n\n  ``` Javascript\n  var obj = _.deepExtend({url: \"www.example.com\"}, {url: \"http://#{_}/path/to/file.html\"});\n      \n  console.log(obj.url);\n  ```\n  \n  output: `http://www.example.com/path/to/file.html`\n\n- parentRE also acts as a placeholder, which can be useful when you need to change one value in an array, while\n  leaving the others untouched. example:\n\n  ``` Javascript\n      var arr = _.deepExtend([100,    {id: 1234}, true,  \"foo\",  [250, 500]],\n                             [\"#{_}\", \"#{_}\",     false, \"#{_}\", \"#{_}\"]);\n      console.log(arr);\n  ```\n\n  output: `[100, {id: 1234}, false, \"foo\", [250, 500]]`\n\n- The previous example can also be written like this:\n\n    var arr = _.deepExtend([100,    {id:1234},   true,  \"foo\",  [250, 500]],\n                          [\"#{_}\", {},          false, \"#{_}\", []]);\n    console.log(arr);\n\n  output: `[100, {id: 1234}, false, \"foo\", [250, 500]]`\n\n- And also like this:\n\n  ``` Javascript\n  var arr = _.deepExtend([100,    {id:1234},   true,  \"foo\",  [250, 500]],\n                         [\"#{_}\", {},          false]);\n  console.log(arr);\n  ```\n\n  output: `[100, {id: 1234}, false, \"foo\", [250, 500]]`\n\n- Array order is important. example:\n\n  ``` Javascript\n  var arr = _.deepExtend([1, 2, 3, 4], [1, 4, 3, 2]);\n  console.log(arr);\n  ```\n  \n  output: `[1, 4, 3, 2]`\n\n\n- You can remove an array element set in a parent object by setting the same index value to null in a child object. Example:\n\n  ``` Javascript\n  var obj = _.deepExtend({arr: [1, 2, 3, 4]}, {arr: [\"#{_}\", null]});\n  console.log(obj.arr);\n  ```\n  \n  output: `[1, 3, 4]`\n",
  "readmeFilename": "README.md",
  "_id": "undescoreDeepExtend@0.0.1",
  "commit": "8e24fed534517dd43d8f3cbc2f7cb1a6e800966d"
}